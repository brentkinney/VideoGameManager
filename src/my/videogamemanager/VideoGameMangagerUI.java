/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.videogamemanager;
import java.util.Vector;
import javax.swing.JOptionPane;
/**
 *This program allows for a user to track their video game library by entering
 * the title, rating, and release year of a video game.
 * The UI will validate the entries given by the user to make sure all three
 * fields have acceptable data.
 * @author Brent
 */
public class VideoGameMangagerUI extends javax.swing.JFrame {

    /**
     * Creates new form VideoGameMangagerUI
     */
    public VideoGameMangagerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        releaseYearLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        eRadioButton = new javax.swing.JRadioButton();
        tRadioButton = new javax.swing.JRadioButton();
        mRadioButton = new javax.swing.JRadioButton();
        releaseYearTextField = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTextPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        titleLabel.setText("Title:");

        ratingLabel.setText("Rating:");

        releaseYearLabel.setText("Release Year:");

        eRadioButton.setText("E");
        eRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eRadioButtonActionPerformed(evt);
            }
        });

        tRadioButton.setText("T");
        tRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tRadioButtonActionPerformed(evt);
            }
        });

        mRadioButton.setText("M");
        mRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mRadioButtonActionPerformed(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(ratingLabel)
                        .addGap(18, 18, 18)
                        .addComponent(eRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(tRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(mRadioButton))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(18, 18, 18)
                        .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addComponent(releaseYearLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(releaseYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(clearButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitButton))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLabel)
                    .addComponent(eRadioButton)
                    .addComponent(tRadioButton)
                    .addComponent(mRadioButton))
                .addGap(18, 18, 18)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(releaseYearLabel)
                    .addComponent(releaseYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(clearButton)))
        );

        outputTextPane.setEditable(false);
        jScrollPane1.setViewportView(outputTextPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    Method that allows a press of the 'clear' button that clears out all fields and sets the
    radio buttons to 'unselected'
    @param evt is the action event of clicking the clear button
    */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
    titleTextField.setText("");
    releaseYearTextField.setText("");
    eRadioButton.setSelected(false);
    tRadioButton.setSelected(false);
    mRadioButton.setSelected(false);
    }//GEN-LAST:event_clearButtonActionPerformed

    /*
    Method that acts on a press of the 'submit' button and adds a new 
    video game record to the library after all validations are completed
    @param evt is the action event of clicking the submit button
    */
    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
       // creat a new video game object
       VideoGame tempGame = new VideoGame();
       
       //create a boolean variable to determine if the value returned by the 
       //setTitle() method is valid and if it's not, display an error messeage
       //and stop further processing of the function.
       boolean validTitle = tempGame.setTitle(titleTextField.getText());
       if (!validTitle)
       {
           JOptionPane.showMessageDialog(null, "You must enter a Title");
           return;
       }
       
       //check which radio button is selected and if none, display error message
       //and stop further processing of the function
       if (eRadioButton.isSelected())
       {
           tempGame.setRating("E");
       }
       else if (tRadioButton.isSelected())
       {
           tempGame.setRating("T");
       }
       else if (mRadioButton.isSelected())
       {
          tempGame.setRating("M");
       }
       else
       {
          JOptionPane.showMessageDialog(null, "You must select a Rating");
           return; 
       }
       
       //create a new string consisting of the text in release year field
       String field2String = releaseYearTextField.getText();
       
       //check if there are values in the field and if there are, etner into the
       //parse attempt
       if (!"".equals(field2String))
       {
           //create a new int variable
           int parsedString;
           //try to parse the string to an int
           try 
           {
            parsedString = Integer.parseInt(field2String);
           }
           //if the string cannot be parsed (no integers entered) catch the
           //exception and display an error message, again stopping further
           //processing of the function
           catch(NumberFormatException e)
           {
             JOptionPane.showMessageDialog(null, "Release Year must be a number");
             return;
           }
           
           //check if setReleaseYear returns a valid entry and if not, display
           //an error message and stop further processing of the function
           boolean validYear = tempGame.setReleaseYear(parsedString);
           if (!validYear)
            {
                JOptionPane.showMessageDialog(null, "Release Year must be greater than 0");
                return;
            }
           
       }
       //if no value in the sting at all, display error message and stop further
       //processing of the function
       else
       {
       JOptionPane.showMessageDialog(null, "You must enter a Release Year");
                return;
       }
       
      
       
       //now that the video game object is validated, add it to the vector
       gameLibrary.add(tempGame);
       
       //create a new string with the current text in the library panel
       String currentOutput = outputTextPane.getText();
       
       //check if the library panel is null or empty and if so, set the text
       //to the toString for the newly created game
       if (currentOutput == null || "".equals(currentOutput))
       {
          outputTextPane.setText(tempGame.toString()); 
       }
       //if their is previous text in the library pane, add a toString for the
       //new game object on a new line
       else
       {
          String newOutput = currentOutput + "\n" + tempGame.toString();
          outputTextPane.setText(newOutput);
       }
         
       
      // clear out all fields after game object is created
       titleTextField.setText("");
       releaseYearTextField.setText("");
       eRadioButton.setSelected(false);
       tRadioButton.setSelected(false);
       mRadioButton.setSelected(false);
       
    }//GEN-LAST:event_submitButtonActionPerformed

    /*
    method that selects the E radio button option and de-selects all other radio
    buttons as only one can be chosen
    @param evt is the action event of clicking the radio button
    */
    private void eRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eRadioButtonActionPerformed
        tRadioButton.setSelected(false);
        mRadioButton.setSelected(false);
    }//GEN-LAST:event_eRadioButtonActionPerformed

     /*
    method that selects the T radio button option and de-selects all other radio
    buttons as only one can be chosen
    @param evt is the action event of clicking the radio button
    */
    private void tRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tRadioButtonActionPerformed
        eRadioButton.setSelected(false);
        mRadioButton.setSelected(false);
    }//GEN-LAST:event_tRadioButtonActionPerformed

     /*
    method that selects the M radio button option and de-selects all other radio
    buttons as only one can be chosen
    @param evt is the action event of clicking the radio button
    */
    private void mRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mRadioButtonActionPerformed
        eRadioButton.setSelected(false);
        tRadioButton.setSelected(false);
    }//GEN-LAST:event_mRadioButtonActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VideoGameMangagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VideoGameMangagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VideoGameMangagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VideoGameMangagerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VideoGameMangagerUI().setVisible(true);
            }
        });
    }
    //Additional Variables needed
    
    private Vector gameLibrary = new Vector();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearButton;
    private javax.swing.JRadioButton eRadioButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mRadioButton;
    private javax.swing.JTextPane outputTextPane;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JLabel releaseYearLabel;
    private javax.swing.JTextField releaseYearTextField;
    private javax.swing.JButton submitButton;
    private javax.swing.JRadioButton tRadioButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    // End of variables declaration//GEN-END:variables
}
